{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\buianh\\\\Desktop\\\\Github\\\\nguoibangiay.demo\\\\components\\\\carousel\\\\carousel-sanphammoi.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport url from \"../link-data\";\nexport default class Showproduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dbnewproduct: [],\n      dbbestsell: []\n    };\n  }\n\n  componentDidMount() {\n    // get data sanphammoi\n    fetch(`${url}sanphammoi`).then(result => {\n      return result.json();\n    }).then(data => this.setState({\n      dbnewproduct: data\n    })); // get data sanphambanchay\n\n    fetch(`${url}sanphambanchay`).then(result => {\n      return result.json();\n    }).then(data => this.setState({\n      dbbestsell: data\n    }));\n  }\n\n  render() {\n    var settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n      initialSlide: 0,\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          infinite: true,\n          dots: false\n        }\n      }, {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2\n        }\n      }, {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }]\n    };\n    const {\n      dbnewproduct,\n      dbbestsell\n    } = this.state;\n    const listnewproduct = dbnewproduct.map((demo, index) => __jsx(\"div\", {\n      key: index,\n      className: \"sanphammoi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: demo.src,\n      className: \"item-sanphammoi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, demo.ten), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"gia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, demo.gia.toLocaleString(), \" \\u0111\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      className: \"addcart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Th\\xEAm v\\xE0o gi\\u1ECF\")));\n    const listbestsell = dbbestsell.map((demo, index) => __jsx(\"div\", {\n      key: index,\n      className: \"sanphammoi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: demo.src,\n      className: \"item-sanphammoi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, demo.ten), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"gia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, demo.gia.toLocaleString(), \" \\u0111\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      className: \"addcart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Th\\xEAm v\\xE0o gi\\u1ECF\")));\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"S\\u1EA2N PH\\u1EA8M M\\u1EDAI NH\\u1EA4T\"), __jsx(\"button\", {\n      className: \"btn-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"S\\u1EA2N PH\\u1EA8M B\\xC1N CH\\u1EA0Y\"), __jsx(\"button\", {\n      className: \"btn-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"S\\u1EA2N PH\\u1EA8M PH\\u1ED4 BI\\u1EBEN\")), __jsx(Slider, _extends({}, settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), listnewproduct));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/buianh/Desktop/Github/nguoibangiay.demo/components/carousel/carousel-sanphammoi.js"],"names":["React","Component","Slider","url","Showproduct","constructor","props","state","dbnewproduct","dbbestsell","componentDidMount","fetch","then","result","json","data","setState","render","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","listnewproduct","map","demo","index","src","ten","gia","toLocaleString","listbestsell"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport url from \"../link-data\";\r\n\r\nexport default class Showproduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dbnewproduct: [],\r\n      dbbestsell: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // get data sanphammoi\r\n    fetch(`${url}sanphammoi`)\r\n      .then(result => {\r\n        return result.json();\r\n      })\r\n      .then(data =>\r\n        this.setState({\r\n          dbnewproduct: data\r\n        })\r\n      );\r\n    // get data sanphambanchay\r\n    fetch(`${url}sanphambanchay`)\r\n      .then(result => {\r\n        return result.json();\r\n      })\r\n      .then(data =>\r\n        this.setState({\r\n          dbbestsell: data\r\n        })\r\n      );\r\n  }\r\n  render() {\r\n    var settings = {\r\n      dots: false,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 4,\r\n      initialSlide: 0,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 3,\r\n            infinite: true,\r\n            dots: false\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n            initialSlide: 2\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    const { dbnewproduct,dbbestsell } = this.state;\r\n    const listnewproduct = dbnewproduct.map((demo, index) => (\r\n      <div key={index} className=\"sanphammoi\">\r\n        <img src={demo.src} className=\"item-sanphammoi\" />\r\n        <br />\r\n        <span className=\"name\">{demo.ten}</span>\r\n        <br />\r\n        <span className=\"gia\">{demo.gia.toLocaleString()} đ</span>\r\n        <br />\r\n        <button className=\"addcart\">Thêm vào giỏ</button>\r\n      </div>\r\n    ));\r\n    const listbestsell = dbbestsell.map((demo, index) => (\r\n      <div key={index} className=\"sanphammoi\">\r\n        <img src={demo.src} className=\"item-sanphammoi\" />\r\n        <br />\r\n        <span className=\"name\">{demo.ten}</span>\r\n        <br />\r\n        <span className=\"gia\">{demo.gia.toLocaleString()} đ</span>\r\n        <br />\r\n        <button className=\"addcart\">Thêm vào giỏ</button>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div>\r\n        <div className=\"category\">\r\n          <button className=\"btn-category\">SẢN PHẨM MỚI NHẤT</button>\r\n          <button className=\"btn-category\">SẢN PHẨM BÁN CHẠY</button>\r\n          <button className=\"btn-category\">SẢN PHẨM PHỔ BIẾN</button>\r\n        </div>\r\n        <Slider {...settings}>{listnewproduct}</Slider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}